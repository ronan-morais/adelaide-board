// Generated by Xata Codegen 0.23.5. Please do not edit.
import { buildClient } from "@xata.io/client";
import type {
  BaseClientOptions,
  SchemaInference,
  XataRecord,
} from "@xata.io/client";

const tables = [
  {
    name: "cards",
    columns: [
      { name: "idService", type: "link", link: { table: "serviceCategories" } },
      { name: "idProduct", type: "link", link: { table: "productCategories" } },
      { name: "expireAt", type: "datetime" },
      { name: "email", type: "email" },
      { name: "title", type: "string" },
      { name: "desc", type: "text" },
      { name: "location", type: "string" },
      { name: "phoneNumber", type: "string" },
      { name: "contact", type: "string" },
      { name: "website", type: "string" },
      { name: "type", type: "multiple" },
      { name: "needs", type: "multiple" },
      { name: "image", type: "file[]" },
    ],
  },
  {
    name: "productCategories",
    columns: [{ name: "title", type: "string" }],
    revLinks: [{ column: "idProduct", table: "cards" }],
  },
  {
    name: "users",
    columns: [
      { name: "userAgent", type: "string" },
      { name: "geolocation", type: "string" },
      { name: "language", type: "string" },
      { name: "screen", type: "string" },
      { name: "ip", type: "string" },
      { name: "platform", type: "string" },
      { name: "dateTimeAccess", type: "string" },
    ],
  },
  {
    name: "serviceCategories",
    columns: [{ name: "Title", type: "string" }],
    revLinks: [{ column: "idService", table: "cards" }],
  },
  { name: "favorites", columns: [] },
  {
    name: "needs",
    columns: [
      { name: "title", type: "string" },
      { name: "desc", type: "text" },
    ],
  },
] as const;

export type SchemaTables = typeof tables;
export type InferredTypes = SchemaInference<SchemaTables>;

export type Cards = InferredTypes["cards"];
export type CardsRecord = Cards & XataRecord;

export type ProductCategories = InferredTypes["productCategories"];
export type ProductCategoriesRecord = ProductCategories & XataRecord;

export type Users = InferredTypes["users"];
export type UsersRecord = Users & XataRecord;

export type ServiceCategories = InferredTypes["serviceCategories"];
export type ServiceCategoriesRecord = ServiceCategories & XataRecord;

export type Favorites = InferredTypes["favorites"];
export type FavoritesRecord = Favorites & XataRecord;

export type Needs = InferredTypes["needs"];
export type NeedsRecord = Needs & XataRecord;

export type DatabaseSchema = {
  cards: CardsRecord;
  productCategories: ProductCategoriesRecord;
  users: UsersRecord;
  serviceCategories: ServiceCategoriesRecord;
  favorites: FavoritesRecord;
  needs: NeedsRecord;
};

const DatabaseClient = buildClient();

const defaultOptions = {
  databaseURL:
    "https://Adelaide-Boards-6mppfj.us-east-1.xata.sh/db/adelaide-boards",
};

export class XataClient extends DatabaseClient<DatabaseSchema> {
  constructor(options?: BaseClientOptions) {
    super({ ...defaultOptions, ...options }, tables);
  }
}

let instance: XataClient | undefined = undefined;

export const getXataClient = () => {
  if (instance) return instance;

  instance = new XataClient();
  return instance;
};
